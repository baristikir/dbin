{"version":3,"sources":["../index.ts","../src/ledgerServices.ts","../src/agentConfigs.ts","../src/agentServices.ts"],"sourcesContent":["export * as LedgerServices from \"./src/ledgerServices\";\nexport * as AgentConfigServices from \"./src/agentConfigs\";\nexport * as AgentServices from \"./src/agentServices\";\n","import { RequestInfo, ResponseInit } from \"node-fetch\";\n\n// For network request purposes only.\nconst fetch = (url: RequestInfo, init?: ResponseInit) =>\n\timport(\"node-fetch\").then(({ default: fetch }) => fetch(url, init));\n\n// Hyperledger Indy networks will return the genesis file as a plaintext response\nexport async function fetchGenesisTransaction(\n\tledgerUrl: string\n): Promise<string> {\n\tconsole.log(\n\t\t\"[ledger.services] Fetching Genesis Transaction for Indy Ledger..\"\n\t);\n\tconst res = await fetch(ledgerUrl);\n\treturn await res.text();\n}\n","import { Agent, InitConfig, IndyPoolConfig } from \"@aries-framework/core\";\nimport { agentDependencies } from \"@aries-framework/node\";\nimport { fetchGenesisTransaction } from \"./ledgerServices\";\n\ninterface RequiredAgentConfig extends InitConfig {\n\twalletConfig: InitConfig[\"walletConfig\"];\n}\ninterface CreateAgentConfigProps extends RequiredAgentConfig {}\nexport async function createAgentConfig({ ...args }: CreateAgentConfigProps) {\n\tconsole.log(\"[agent.config] Creating Agent Config..\");\n\n\tconst config: InitConfig = {\n\t\t...args,\n\t};\n\n\treturn config;\n}\n\ntype IndyLedgerConfig = {\n\tid: string;\n\tledgerUrl: string;\n\tindyNamespace: string;\n\tisProduction: boolean;\n};\ninterface CreateAgentProps {\n\tconfig: InitConfig;\n\tindyLedgers: IndyLedgerConfig[];\n}\n\nconst genesisTransactionsCache = new WeakMap<IndyLedgerConfig, string>();\nexport async function createAgent({ config, indyLedgers }: CreateAgentProps) {\n\tconsole.log(\"[agent.config] Creating Agent..\");\n\n\tlet ledgers: IndyPoolConfig[] = [];\n\tfor (const key in indyLedgers) {\n\t\tconst indyLedger = indyLedgers[key];\n\t\tif (genesisTransactionsCache.has(indyLedger)) {\n\t\t\tconsole.log(\"[agent.configs] Found Genesis Transaction in cache.\");\n\n\t\t\tif (\"ledgerUrl\" in indyLedger) delete indyLedger.ledgerUrl;\n\n\t\t\tledgers.push({\n\t\t\t\t...indyLedger,\n\t\t\t\tgenesisTransactions: genesisTransactionsCache.get(indyLedger),\n\t\t\t});\n\n\t\t\tbreak;\n\t\t}\n\n\t\t// Fetching Genesis transaction file via HTTP GET request\n\t\tconst genesisTransactions = await fetchGenesisTransaction(\n\t\t\tindyLedger.ledgerUrl\n\t\t);\n\t\tif (typeof genesisTransactions !== \"string\") {\n\t\t\tconsole.log(\"[agent.configs] Failed fetching genesis transactions file.\");\n\t\t\tbreak;\n\t\t}\n\n\t\tgenesisTransactionsCache.set(indyLedger, genesisTransactions);\n\t\tdelete indyLedger.ledgerUrl;\n\n\t\tledgers.push({\n\t\t\t...indyLedger,\n\t\t\tgenesisTransactions,\n\t\t});\n\t}\n\n\tconst agent = new Agent({\n\t\tconfig: {\n\t\t\t...config,\n\t\t\tindyLedgers: ledgers.map((ledger) => ({\n\t\t\t\t...ledger,\n\t\t\t})),\n\t\t},\n\t\tdependencies: agentDependencies,\n\t});\n\n\treturn agent;\n}\n","import { Agent } from \"@aries-framework/core\";\n\nexport class AgentServices {\n\tagent: Agent;\n\n\tconstructor(agent: Agent) {\n\t\tthis.agent = agent;\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAGA,IAAM,QAAQ,CAAC,KAAkB,SAChC,OAAO,cAAc,KAAK,CAAC,EAAE,SAASA,OAAM,MAAMA,OAAM,KAAK,IAAI,CAAC;AAGnE,eAAsB,wBACrB,WACkB;AAClB,UAAQ;AAAA,IACP;AAAA,EACD;AACA,QAAM,MAAM,MAAM,MAAM,SAAS;AACjC,SAAO,MAAM,IAAI,KAAK;AACvB;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkD;AAClD,kBAAkC;AAOlC,eAAsB,kBAAkB,KAAK,KAAK,GAA2B;AAC5E,UAAQ,IAAI,wCAAwC;AAEpD,QAAM,SAAqB;AAAA,IAC1B,GAAG;AAAA,EACJ;AAEA,SAAO;AACR;AAaA,IAAM,2BAA2B,oBAAI,QAAkC;AACvE,eAAsB,YAAY,EAAE,QAAQ,YAAY,GAAqB;AAC5E,UAAQ,IAAI,iCAAiC;AAE7C,MAAI,UAA4B,CAAC;AACjC,aAAW,OAAO,aAAa;AAC9B,UAAM,aAAa,YAAY;AAC/B,QAAI,yBAAyB,IAAI,UAAU,GAAG;AAC7C,cAAQ,IAAI,qDAAqD;AAEjE,UAAI,eAAe;AAAY,eAAO,WAAW;AAEjD,cAAQ,KAAK;AAAA,QACZ,GAAG;AAAA,QACH,qBAAqB,yBAAyB,IAAI,UAAU;AAAA,MAC7D,CAAC;AAED;AAAA,IACD;AAGA,UAAM,sBAAsB,MAAM;AAAA,MACjC,WAAW;AAAA,IACZ;AACA,QAAI,OAAO,wBAAwB,UAAU;AAC5C,cAAQ,IAAI,4DAA4D;AACxE;AAAA,IACD;AAEA,6BAAyB,IAAI,YAAY,mBAAmB;AAC5D,WAAO,WAAW;AAElB,YAAQ,KAAK;AAAA,MACZ,GAAG;AAAA,MACH;AAAA,IACD,CAAC;AAAA,EACF;AAEA,QAAM,QAAQ,IAAI,kBAAM;AAAA,IACvB,QAAQ;AAAA,MACP,GAAG;AAAA,MACH,aAAa,QAAQ,IAAI,CAAC,YAAY;AAAA,QACrC,GAAG;AAAA,MACJ,EAAE;AAAA,IACH;AAAA,IACA,cAAc;AAAA,EACf,CAAC;AAED,SAAO;AACR;;;AC9EA;AAAA;AAAA;AAAA;AAEO,IAAM,gBAAN,MAAoB;AAAA,EAC1B;AAAA,EAEA,YAAY,OAAc;AACzB,SAAK,QAAQ;AAAA,EACd;AACD;","names":["fetch"]}