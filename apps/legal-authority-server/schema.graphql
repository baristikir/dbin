type Agent {
  isInitialized: Boolean!
  label: String!
}

type Connection {
  alias: String
  autoAcceptConnection: Boolean
  did: String
  errMessage: String

  """Connection Record ID, often known as connectionId"""
  id: String!
  invitationDid: String
  isReady: Boolean!
  isRequester: Boolean!
  mediatorId: String
  oobId: String
  protocol: String
  role: String!
  state: String!
  theirDid: String
  theirLabel: String
  threadId: String
  type: String!
}

input ConnectionsFilterInput {
  isReady: Boolean
  isRequester: Boolean
  protocol: String
  state: String
  theirDid: String
  theirLabel: String
}

type Credential {
  connectionId: String
  id: String!
  protocolVersion: String!
  state: String!
  threadId: String!
  type: String!
}

scalar DateTime

type Mutation {
  createInvitation: String!
  removeConnection(input: RemoveConnectionInput!): Boolean!
}

type Query {
  agent: Agent!
  connection(id: String!): Connection!
  connections(filter: ConnectionsFilterInput): [Connection!]!
  credentialByConnection(connectionId: String!): [Credential!]!
  credentials: [Credential!]!
}

input RemoveConnectionInput {
  connectionId: String!
}